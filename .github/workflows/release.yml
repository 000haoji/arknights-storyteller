name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - release

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-tauri:
    name: Build desktop bundles
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: "--target aarch64-apple-darwin"
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
          - platform: ubuntu-24.04
            args: ""
          - platform: windows-latest
            args: ""
    permissions:
      contents: write
    outputs:
      release_id: ${{ steps.publish.outputs.releaseId }}
      release_upload_url: ${{ steps.publish.outputs.releaseUploadUrl }}
      app_version: ${{ steps.publish.outputs.appVersion }}
    steps:
      - uses: actions/checkout@v4

      - name: Install system deps (Ubuntu)
        if: contains(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
          cache-dependency-path: |
            arknights-story-reader/package-lock.json

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: arknights-story-reader/src-tauri -> target

      - name: Install frontend dependencies
        run: npm ci
        working-directory: arknights-story-reader

      - name: Build with tauri-action
        id: publish
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_UPDATER_PUBKEY: ${{ secrets.TAURI_UPDATER_PUBKEY }}
          TAURI_UPDATER_ENDPOINT: ${{ secrets.TAURI_UPDATER_ENDPOINT }}
        with:
          projectPath: arknights-story-reader
          tagName: app-v__VERSION__
          releaseName: 明日方舟剧情阅读器 v__VERSION__
          releaseBody: |
            自动构建版本。请在附件中获取对应平台的安装包。
          releaseDraft: true
          args: ${{ matrix.args }}

  check-android-secrets:
    name: Check Android signing secrets
    runs-on: ubuntu-24.04
    outputs:
      has_keystore: ${{ steps.check.outputs.has_keystore }}
    steps:
      - id: check
        run: |
          if [ -n "$ANDROID_KEYSTORE_B64" ]; then
            echo "has_keystore=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_keystore=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          ANDROID_KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_B64 }}

  android:
    name: Build signed Android APK
    needs: [publish-tauri, check-android-secrets]
    if: needs.publish-tauri.outputs.release_id != '' && needs.check-android-secrets.outputs.has_keystore == 'true'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
          cache-dependency-path: |
            arknights-story-reader/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: |
            tools
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            ndk;26.1.10909125

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: arknights-story-reader/src-tauri -> target

      - name: Install frontend dependencies
        run: npm ci
        working-directory: arknights-story-reader

      - name: Restore Android keystore
        env:
          ANDROID_KEYSTORE_B64: "${{ secrets.ANDROID_KEYSTORE_B64 }}"
          ANDROID_KEYSTORE_PASSWORD: "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
          ANDROID_KEY_ALIAS: "${{ secrets.ANDROID_KEY_ALIAS }}"
          ANDROID_KEY_PASSWORD: "${{ secrets.ANDROID_KEY_PASSWORD }}"
        run: |
          mkdir -p src-tauri/gen/android
          echo "$ANDROID_KEYSTORE_B64" | base64 --decode > src-tauri/gen/android/upload-keystore.jks
          KEY_PASSWORD="${ANDROID_KEY_PASSWORD:-$ANDROID_KEYSTORE_PASSWORD}"
          cat > src-tauri/gen/android/keystore.properties <<EOF
          storePassword=${ANDROID_KEYSTORE_PASSWORD}
          keyPassword=${KEY_PASSWORD}
          keyAlias=${ANDROID_KEY_ALIAS}
          storeFile=${GITHUB_WORKSPACE}/arknights-story-reader/src-tauri/gen/android/upload-keystore.jks
          EOF
        working-directory: arknights-story-reader

      - name: Build signed Android APK
        env:
          ANDROID_KEYSTORE_PATH: "${{ github.workspace }}/arknights-story-reader/src-tauri/gen/android/upload-keystore.jks"
          ANDROID_KEY_ALIAS: "${{ secrets.ANDROID_KEY_ALIAS }}"
          ANDROID_KEYSTORE_PASSWORD: "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
          ANDROID_KEY_PASSWORD: "${{ secrets.ANDROID_KEY_PASSWORD }}"
        run: bash scripts/build-apk.sh
        working-directory: arknights-story-reader

      - name: Upload APK to release
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          APP_VERSION: "${{ needs.publish-tauri.outputs.app_version }}"
        run: |
          APK_PATH="src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk"
          if [ ! -f "$APK_PATH" ]; then
            echo "Signed APK not found at $APK_PATH" >&2
            exit 1
          fi
          TAG="app-v${APP_VERSION}"
          RELEASE_NAME="arknights-story-reader-android-${APP_VERSION}.apk"
          gh release upload "$TAG" "$APK_PATH#$RELEASE_NAME" --clobber
        working-directory: arknights-story-reader

      - name: Publish Android update manifest
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          APP_VERSION: "${{ needs.publish-tauri.outputs.app_version }}"
          REPO: "${{ github.repository }}"
        run: |
          TAG="app-v${APP_VERSION}"
          APK_NAME="arknights-story-reader-android-${APP_VERSION}.apk"
          JSON_PATH="android-latest.json"
          printf '{\n  "version": "%s",\n  "notes": "",\n  "url": "https://github.com/%s/releases/download/%s/%s",\n  "fileName": "%s"\n}\n' \
            "$APP_VERSION" "$REPO" "$TAG" "$APK_NAME" "$APK_NAME" > "$JSON_PATH"
          gh release upload "$TAG" "$JSON_PATH#$JSON_PATH" --clobber
        working-directory: arknights-story-reader

      - name: Cleanup keystore
        if: always()
        run: rm -f src-tauri/gen/android/upload-keystore.jks src-tauri/gen/android/keystore.properties
        working-directory: arknights-story-reader
